# dot_secret/bw-push.sh.tmpl
#!/usr/bin/env bash
set -eo pipefail

# Initialize environment
SECRETS_DIR="$HOME/.secrets/bitwarden"

# if BW_SESSION not set, login to Bitwarden
if [[ -z "$BW_SESSION" ]]; then
  echo "BW_SESSION is not set. Please log into Bitwarden first."
  exit 1
fi


# Iterate through bitwarden secret configurations
{{ range $section, $data := .secrets.bitwarden }}
  {{ if $data }}
    echo {{ $data }}
    # {{ $sectionPath := replace $section "." "/" }}
    # {{ $noteName := replace $section "/" "." }}

    # # Get existing item or create new
    # if ! item=$(bw get item "{{ $noteName }}" 2>/dev/null); then
    #   item_id=$(bw create item --collectionId "{{ (bitwarden "collection" "Secrets").id }}" \
    #     --type note \
    #     --name "{{ $noteName }}" \
    #     --notes "Auto-generated by Chezmoi" | jq -r '.id')
    # else
    #   item_id=$(echo "$item" | jq -r '.id')
    # fi

    # # Process files
    # {{ range $file := $data.files }}
    #   local_file="$SECRETS_DIR/{{ $sectionPath }}/{{ $file }}"
    #   if [[ -f "$local_file" ]]; then
    #     # Delete existing attachment if present
    #     if existing_attachment=$(echo "$item" | jq -r '.attachments[] | select(.fileName == "{{ $file }}").id'); then
    #       bw delete attachment "$existing_attachment" --itemid "$item_id"
    #     fi

    #     # Upload new attachment
    #     bw create attachment --file "$local_file" \
    #       --itemid "$item_id" \
    #       --name "{{ $file }}"
    #   fi
    # {{ end }}
  {{ end }}
{{ end }}
