[github]
  user = {{ .chezmoi.username }}

[user]
  name = {{ .operator }}
  email = {{ .email.free }}

[color]
  ui = auto

[color "diff"]
  meta = blue bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "branch"]
  current = yellow reverse
  local = yellow bold
  remote = green bold
  plain = red bold

[color "status"]
  added = green bold
  changed = yellow
  untracked = blue bold

# Reuse recorded resolutions of conflicted merges during rebase
# https://git-scm.com/docs/git-rerere
# https://stackoverflow.com/questions/28415276/git-why-do-i-need-to-solve-my-merge-conflicts-twice-when-using-rebase
[rerere]
  enabled = true

[alias]
    st = status
    sw = switch
    ci = commit
    br = branch
    co = checkout
    df = diff
    lg = log -p
    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
    ls = ls-files
    unstage = reset HEAD --
    last = log -1 HEAD
    tagcommit = rev-list -n 1
	tags = log -n1 --pretty=format:%h%d

[hub]
  protocol = https

[core]
    pager = less -R
	autocrlf = false
	sshCommand = ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no

#[push]
#    default = simple

[branch]
    autosetuprebase = always

[help]
    autocorrect = 1

# Add the following to your .gitconfig file.
# You use git difftool in exactly the same way as you use git diff
[diff]
    tool = meld
[difftool]
    prompt = false
[difftool "meld"]
    cmd = meld "$LOCAL" "$REMOTE"

#Mergetool can now be used to resolve the merge conflicts. You start it very easily with:
#git mergetool
[merge]
	tool = vimdiff
[mergetool "meld"]
    # Choose one of these 2 lines (not both!) explained below.
    cmd = meld "$LOCAL" "$MERGED" "$REMOTE" --output "$MERGED"
    # cmd = meld "$LOCAL" "$BASE" "$REMOTE" --output "$MERGED"
[mergetool "vimdiff"]
	cmd = vimdiff -c \"4split $MERGED\" \"$BASE\" \"$LOCAL\" \"$REMOTE\"

[http]
	sslVerify = false

[cola]
	spellcheck = false
[safe]
	directory = /home/linuxbrew/.linuxbrew/Library/Taps/homebrew/homebrew-core
	directory = /home/linuxbrew/.linuxbrew
	directory = /home/nkabir/code/dev/cridev/code/service/gollum/var/gollum
[init]
	defaultBranch = main

[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
